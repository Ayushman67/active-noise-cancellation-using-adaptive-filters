clc;
clear all;
close all;
sampling_time=1/(8*200); 
mu=0.05; 
M=16; 
Iterations=1000; 
u=zeros(M,1); 
x=zeros(M,1); 
w=zeros(M,1); 
s=zeros(M,1); 
e=zeros(Iterations,1); 
Wn=[0.1 0.5]; 
[Bn,An]=butter(2,Wn); 
Ws=0.5; 
[Bs,As]=butter(2,Wn); 
for n=0:Iterations-1 
t=n*sampling_time; 
for i=M:-1:2 
u(i)=u(i-1); 
s(i)=s(i-1); 
end 
u(1)= 0.2*(cos(2*pi*50*t)+sin(2*pi*100*t)+cos(2*pi*60*t)+sin(2*pi*80*t)+cos(2*pi*30*t)+sin(2*pi*20*t)); %rand(1)-0.5; 
s(1)=cos(2*pi*200*n*sampling_time); 
sig(n+1)=s(1); 
noi(n+1)=u(1); 
d(n+1)=s(1)+u(1); 
x=filter(Bn,An,u)+0.04*filter(Bs,As,s); 
d_out=conj(w')*x; 
e(n+1)=d(n+1)-d_out; 
w=w+mu*x*conj(e(n+1)); 
end
n=0:Iterations-1; 
subplot(3,1,1); 
plot(n,d,'r'); 
title('Noise Canceller-Signal Comps. in ref. input'); 
axis([0 Iterations-1 -2 2]); 
xlabel('Iterations'); 
ylabel('ANC i/p'); 
subplot(3,1,2); 
plot(n,cos(2*pi*200*n*sampling_time),'g'); 
axis([0 Iterations-1 -2 2]); 
xlabel('Iterations'); 
ylabel('desired'); 
subplot(3,1,3); 
plot(n,e','b'); 
axis([0 Iterations-1 -2 2]); 
xlabel('Iterations'); 
ylabel('ANC o/p'); 
ZOOM XON;
